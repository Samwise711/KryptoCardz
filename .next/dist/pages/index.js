'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _factory = require('../ethereum/factory');

var _factory2 = _interopRequireDefault(_factory);

var _semanticUiReact = require('semantic-ui-react');

var _LayoutSearch = require('../components/LayoutSearch');

var _LayoutSearch2 = _interopRequireDefault(_LayoutSearch);

var _routes = require('../routes');

var _web = require('../ethereum/web3');

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'C:\\Users\\Dan\\Documents\\GitHub\\kryptocardz\\pages\\index.js?entry';
//import Campaign from '../ethereum/campaign';
//import axios from 'axios';


// class based component

var CampaignIndex = function (_Component) {
  (0, _inherits3.default)(CampaignIndex, _Component);

  function CampaignIndex() {
    (0, _classCallCheck3.default)(this, CampaignIndex);

    return (0, _possibleConstructorReturn3.default)(this, (CampaignIndex.__proto__ || (0, _getPrototypeOf2.default)(CampaignIndex)).apply(this, arguments));
  }

  (0, _createClass3.default)(CampaignIndex, [{
    key: 'renderCampaigns',

    //dynamically compute route for description tag below
    value: function renderCampaigns() {

      //const accounts = await web3.eth.getAccounts();
      //const ownerCards = await factory.methods.getCardsByOwner(accounts[0]).call();

      var items = this.props.searchArray.map(function (request, index) {
        return {

          image: _react2.default.createElement('img', { src: 'https://storage.googleapis.com/cryptocardz-c5066.appspot.com/' + (parseInt(request.Id) + 1) + '.png', width: '150', style: { marginLeft: '35px', marginTop: '15px', marginBottom: '15px' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 49
            }
          }),
          header: request.Name,
          meta: _web2.default.utils.fromWei(request.Price, 'ether') + " ETH",
          href: '/campaigns/' + request.Id
          //fluid: true  // causes cards to go full width of frame
        };
      });

      return _react2.default.createElement(_semanticUiReact.Card.Group, { items: items, itemsPerRow: 4, __source: {
          fileName: _jsxFileName,
          lineNumber: 57
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_LayoutSearch2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65
        }
      }, _react2.default.createElement('div', { style: { marginTop: '25px' }, __source: {
          fileName: _jsxFileName,
          lineNumber: 66
        }
      }, _react2.default.createElement('h3', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67
        }
      }, 'Marketplace'), _react2.default.createElement(_routes.Link, { route: '/campaigns/new', __source: {
          fileName: _jsxFileName,
          lineNumber: 68
        }
      }, _react2.default.createElement('a', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69
        }
      }, _react2.default.createElement(_semanticUiReact.Button, { floated: 'right', content: 'Create Card', icon: 'add', primary: true, __source: {
          fileName: _jsxFileName,
          lineNumber: 70
        }
      }))), this.renderCampaigns()));
    }
  }], [{
    key: 'getInitialProps',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var structCount, allStructs, sortedArray, searchTerm, searchArray;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _factory2.default.methods.getStructCount().call();

              case 2:
                structCount = _context.sent;
                _context.next = 5;
                return _promise2.default.all( // get array of solidity Structs, trick
                Array(parseInt(structCount)).fill().map(function (element, index) {
                  return _factory2.default.methods.campaignStructs(index).call();
                }));

              case 5:
                allStructs = _context.sent;
                sortedArray = allStructs.sort(function (a, b) {
                  return a.Price - b.Price;
                });
                searchTerm = "saur";
                searchArray = allStructs.filter(function (v) {
                  return (0, _keys2.default)(v).some(function (k) {
                    return v[k].toLowerCase().indexOf(searchTerm) > -1;
                  });
                });
                return _context.abrupt('return', { allStructs: allStructs, sortedArray: sortedArray, searchArray: searchArray });

              case 10:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getInitialProps() {
        return _ref.apply(this, arguments);
      }

      return getInitialProps;
    }()
  }]);

  return CampaignIndex;
}(_react.Component);

exports.default = CampaignIndex;

// Next also requires react component to be exported for each wep page file,
// as seen on line 17

//npm run dev => starts web app
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiQ2FtcGFpZ25JbmRleCIsIl9Db21wb25lbnQiLCJfX3Byb3RvX18iLCJhcHBseSIsImFyZ3VtZW50cyIsImtleSIsInZhbHVlIiwicmVuZGVyQ2FtcGFpZ25zIiwiaXRlbXMiLCJwcm9wcyIsInNlYXJjaEFycmF5IiwibWFwIiwicmVxdWVzdCIsImluZGV4IiwiaW1hZ2UiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwicGFyc2VJbnQiLCJJZCIsIndpZHRoIiwic3R5bGUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJoZWFkZXIiLCJOYW1lIiwibWV0YSIsInV0aWxzIiwiZnJvbVdlaSIsIlByaWNlIiwiaHJlZiIsIkdyb3VwIiwiaXRlbXNQZXJSb3ciLCJyZW5kZXIiLCJyb3V0ZSIsImZsb2F0ZWQiLCJjb250ZW50IiwiaWNvbiIsInByaW1hcnkiLCJfcmVmIiwibWFyayIsIl9jYWxsZWUiLCJzdHJ1Y3RDb3VudCIsImFsbFN0cnVjdHMiLCJzb3J0ZWRBcnJheSIsInNlYXJjaFRlcm0iLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwibWV0aG9kcyIsImdldFN0cnVjdENvdW50IiwiY2FsbCIsInNlbnQiLCJhbGwiLCJBcnJheSIsImZpbGwiLCJlbGVtZW50IiwiY2FtcGFpZ25TdHJ1Y3RzIiwic29ydCIsImEiLCJiIiwiZmlsdGVyIiwidiIsInNvbWUiLCJrIiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwiYWJydXB0Iiwic3RvcCIsImdldEluaXRpYWxQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOztBQUNB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